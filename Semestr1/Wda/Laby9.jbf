<?xml version="1.0" encoding="UTF-8"?><JavaBlocks author="ZTM 47C1" scriptEngine="JavaScript" version="6010">
  <option fullConnectorValues="true" grid="false" pascal="false"/>
  <flowchart name="2">
    <canvas interval="200" posX="-150.13814" posY="8.823677" zoom="3"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-100.0"/>
        <comment>2</comment>
        <connect ID="2"/>
      </block>
      <block id="2" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-30.0"/>
        <content>var lista=[7,10,15,16,20,8,11,22,31,33];	var odPoz=0;	var doPoz=lista.length-1;;	var srodek=doPoz div 2;;	var pomocnicza =[];;	;	function doPomocniczej(){;	    for(k=odPoz;k&lt;=doPoz;k++){;	        pomocnicza.push(lista[k]);	        }                            ;	    }</content>
        <connect ID="3"/>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="140.0"/>
        <content>doPomocniczej();;	var k=odPoz;;	var i=odPoz;;	var j=srodek+1;</content>
        <connect ID="4"/>
      </block>
      <block id="4" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="230.0"/>
        <content> </content>
        <connect ID="5"/>
      </block>
      <block id="5" type="DECISION">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="280.0"/>
        <content>k&lt;=doPoz</content>
        <connect ID="6" value="true"/>
        <connect ID="7" value="false"/>
      </block>
      <block id="6" type="DECISION">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="160.0" posY="280.0"/>
        <content>i&gt;srodek</content>
        <connect ID="12" value="false"/>
        <connect ID="16" value="true"/>
      </block>
      <block id="7" type="IO">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="-170.0" posY="280.0"/>
        <content>Writeln(lista);</content>
        <connect ID="8"/>
      </block>
      <block id="8" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="-170.0" posY="360.0"/>
        <comment>End</comment>
      </block>
      <block id="9" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="530.0" posY="280.0"/>
        <content> </content>
        <connect ID="10"/>
      </block>
      <block id="10" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="530.0" posY="230.0"/>
        <content> </content>
        <connect ID="11"/>
      </block>
      <block id="11" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="230.0" posY="230.0"/>
        <content>k++;</content>
        <connect ID="4"/>
      </block>
      <block id="12" type="DECISION">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="160.0" posY="390.0"/>
        <content>j&gt;doPoz</content>
        <connect ID="14" value="false"/>
        <connect ID="17" value="true"/>
      </block>
      <block id="13" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="530.0" posY="390.0"/>
        <content> </content>
        <connect ID="9"/>
      </block>
      <block id="14" type="DECISION">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="160.0" posY="520.0"/>
        <content>pomocnicza[j]&lt;pomocnicza[i]</content>
        <connect ID="15" value="true"/>
        <connect ID="19" value="false"/>
      </block>
      <block id="15" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="420.0" posY="520.0"/>
        <content>lista[k]=pomocnicza[j++]</content>
        <connect ID="18"/>
      </block>
      <block id="16" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="360.0" posY="280.0"/>
        <content>lista[k]=pomocnicza[j++]</content>
        <connect ID="9"/>
      </block>
      <block id="17" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="370.0" posY="390.0"/>
        <content>lista[k]=pomocnicza[i++]</content>
        <connect ID="13"/>
      </block>
      <block id="18" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="530.0" posY="520.0"/>
        <content> </content>
        <connect ID="13"/>
      </block>
      <block id="19" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="160.0" posY="640.0"/>
        <content>lista[k]=pomocnicza[i++]</content>
        <connect ID="20"/>
      </block>
      <block id="20" type="JUMP">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="530.0" posY="640.0"/>
        <content> </content>
        <connect ID="18"/>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="3">
    <canvas interval="200" posX="-143.23401" posY="-1658.4534" zoom="2"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-100.0"/>
        <comment>3</comment>
        <connect ID="2"/>
      </block>
      <block id="2" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="90.0"/>
        <content>function scal(odPoz, srodek, doPoz){&#13;;	    i=odPoz; j=srodek+1;&#13;;	    for (k=odPoz; k&lt;=doPoz; k++){&#13;;	        if (i&gt;srodek)&#13;;	            lista[k]=pomocnicza[j++]&#13;;	        else&#13;;	            if (j&gt;doPoz)&#13;;	                lista[k]=pomocnicza[i++]&#13;;	            else &#13;;	                if (pomocnicza[j]&lt;pomocnicza[i])&#13;;	                    lista[k]=pomocnicza[j++]&#13;;	                else&#13;;	                    lista[k]=pomocnicza[i++]&#13;;	    }//end of for&#13;;	//     Writeln(lista)&#13;;	}//end of scal</content>
        <connect ID="3"/>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="310.0"/>
        <content>lista=[12, 14, 33, 13, 5, 7, 44, 9]&#13;;	//sprawdzamy kolejne pary&#13;;	for(i=0; i&lt;lista.length-1; i+=2)&#13;;	if (lista[i]&gt;lista[i+1]) {pom=lista[i]&#13;;	lista[i]=lista[i+1]; lista[i+1]=pom}&#13;;	Writeln(lista)</content>
        <connect ID="4"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="430.0"/>
        <content>pomocnicza = []&#13;;	for (k=0; k&lt;lista.length; k++)&#13;;	    pomocnicza.push(lista[k])</content>
        <connect ID="5"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="650.0"/>
        <content>listaT=[]&#13;;	n=8&#13;;	for(zakres=4; zakres&lt;2*n; zakres*=2){&#13;;	    for (x=0;x&lt;n;x+=zakres){&#13;;	    tr1=x;&#13;;	    tr2=x+ Math.floor((zakres-1)/2);&#13;;	    pzakres=zakres;&#13;;	    while(tr2&gt;n-1) {&#13;;	pzakres=pzakres/2;&#13;;	tr2=x+Math.floor((pzakres-1)/2);&#13;;	    }&#13;;	    tr3=x+zakres-1;&#13;;	    if(tr3&gt;n-1) tr3=n-1;&#13;;	    listaT.push([tr1,tr2,tr3])&#13;;	    }&#13;;	}&#13;;	for(i=0;i&lt;3; i++) Writeln(listaT[i])</content>
        <connect ID="6"/>
      </block>
      <block id="6" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="910.0"/>
        <content>scal(0,1,3);	scal(4,5,7);	//tworzenie kopii listy;	for (k=0; k&lt;lista.length; k++){;	        pomocnicza[k] = lista[k];	};	scal(0,3,7);	Writeln(lista)</content>
        <connect ID="7"/>
      </block>
      <block id="7" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="1060.0"/>
        <comment>End</comment>
      </block>
    </blocks>
  </flowchart>
  <flowchart name="5">
    <canvas interval="50" posX="-383.95792" posY="-394.34244" zoom="4"/>
    <blocks>
      <block id="1" name="Start" type="START">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="0.0" posY="-220.0"/>
        <comment>5</comment>
        <connect ID="2"/>
      </block>
      <block id="2" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="-80.0"/>
        <content>function scal(odPoz, srodek, doPoz) {&#13;;	i=odPoz; &#13;;	j=srodek+1&#13;;	 for (k=odPoz; k&lt;=doPoz; k++) {&#13;;	 if (i&gt;srodek) lista[k]=pomocnicza[j++]&#13;;	 else if (j&gt;doPoz) lista[k]=pomocnicza[i++] &#13;;	else if (pomocnicza[j]&lt;pomocnicza[i]) lista[k]=pomocnicza[j++]&#13;;	 else lista[k]=pomocnicza[i++]&#13;;	 } &#13;;	Writeln(lista)&#13;;	}</content>
        <connect ID="3"/>
      </block>
      <block id="3" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="60.0"/>
        <content>lista=[2,43,6,7,3,34,24,11,23,45,66,88,3,71,8,9,17,5,12]</content>
        <connect ID="4"/>
      </block>
      <block id="4" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="350.0"/>
        <content>n=lista.length;	listaTr=[];	pomocnicza=[];	for(zakres=4;zakres&lt;2*n;zakres*=2){;	    for(x=0;x&lt;n;x+=zakres){;	        tr1=x;;	        tr2=x+Math.floor((zakres-1)/2);	        pzakres=zakres;;	        while (tr2&gt;n-1){;	            pzakres=Math.floor(pzakres/2);	            tr2=Math.floor(x+(pzakres-1)/2)    ;	        };	        tr3=x+zakres-1;;	        if(tr3 &gt;n-1);	            tr3=n-1;;	        listaTr.push([tr1,tr2,tr3]);	Writeln([tr1,tr2,tr3]);	    };	}</content>
        <connect ID="6"/>
      </block>
      <block id="5" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="820.0"/>
        <content> ile = lista.length;	 ileTr = listaTr.length;	 for (il=0; il&lt;ileTr; il++) {;	     if(listaTr[il][0] == 0) ;	        for (kl=0;kl&lt;ile;kl++);	            pomocnicza[kl]=lista[kl]; ;	scal(listaTr[il][0], listaTr[il][1], listaTr[il][2]);	 Writeln(listaTr[il][0]);	 } ;	</content>
        <connect ID="7"/>
      </block>
      <block id="6" type="CPU">
        <options displayComment="false"/>
        <visual color="255 255 0" posX="0.0" posY="620.0"/>
        <content>for(i=0;i&lt;lista.length-1;i+=2);	    if(lista[i]&gt;lista[i+1]){;	        pom=lista[i];	        lista[i]=lista[i+1];	        lista[i+1]=pom;	       ;	    };	Writeln(lista)</content>
        <connect ID="5"/>
      </block>
      <block id="7" type="RETURN">
        <options displayComment="true"/>
        <visual color="255 255 0" posX="460.0" posY="360.0"/>
        <comment>End</comment>
      </block>
    </blocks>
  </flowchart>
</JavaBlocks>
